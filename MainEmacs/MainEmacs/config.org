#+PROPERTY: header-args:emacs-lisp :tangle ./init.el :mkdirp yes
#+Startup: showeverything
#+Options: toc:2

* Multi File Example
** Adding the lisp directory to load-path
#+begin_src emacs-lisp
(setq user-emacs-directory (expand-file-name "~/.config/MainEmacs/"))

;; (setq user-emacs-directory "~/.config/MainEmacs/")

#+end_src

** Sourcing the files
#+begin_src emacs-lisp
(message "=== Loading packages.el ===")
(load (expand-file-name "packages.el" user-emacs-directory))
(message "=== Finished packages.el ===")

(message "=== Loading package_configs.el ===")
(condition-case err
    (load (expand-file-name "package_configs.el" user-emacs-directory))
  (error (message "ERROR in package_configs.el: %S" err)))
(message "=== Finished package_configs.el ===")

(message "=== Loading configs.el ===")
(load (expand-file-name "configs.el" user-emacs-directory))
(message "=== Finished configs.el ===")

(message "=== Loading keymaps.el ===")
(condition-case err
    (load (expand-file-name "keymaps.el" user-emacs-directory))
  (error (message "ERROR in keymaps.el: %S" err)))
(message "=== Finished keymaps.el ===")

;; ;; (add-to-list 'load-path "~/.emacs.d/copilot")
;; ;; ;; (require 'copilot)
;; ;; (add-to-list 'load-path "~/.emacs.d/codeium.el")
;; ;; (add-to-list 'load-path "~/.emacs.d/codeium-overlay.el")
;; (load (expand-file-name "packages.el" user-emacs-directory))
;; (load (expand-file-name "package_configs.el" user-emacs-directory))
;; (load (expand-file-name "configs.el" user-emacs-directory))
;; (load (expand-file-name "keymaps.el" user-emacs-directory))

#+end_src

** Auto save if auto tangle header is on
#+begin_src emacs-lisp
(defun my/org-auto-tangle ()
  "Automatically tangle the org file if it contains a tangle header."
  (when (string-match "#\\+auto_tangle: t" (buffer-string))
    (org-babel-tangle)))

(add-hook 'after-save-hook #'my/org-auto-tangle)

;; (defun my/org-auto-tangle ()
;;   "Automatically tangle the org file if it contains a tangle header."
;;   (when (string-match "#\\+auto_tangle: t" (buffer-string))
;;     (org-babel-tangle)))

;; (add-hook 'after-save-hook #'my/org-auto-tangle)

#+end_src
