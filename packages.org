#+TITLE: Package Installation
#+PROPERTY: header-args:emacs-lisp :tangle ~/.config/MainEmacs/packages.el :mkdirp yes

* Package Initialization
Initialize package management and ensure use-package is available
#+begin_src emacs-lisp
  (require 'package)
  (setq package-archives
        '(("melpa"  . "https://melpa.org/packages/")
          ("org"    . "https://orgmode.org/elpa/")
          ("elpa"   . "https://elpa.gnu.org/packages/")
          ("nongnu" . "https://elpa.nongnu.org/nongnu/")))
  (package-initialize)
  (unless package-archive-contents
    (package-refresh-contents))

  ;; Bootstrap use-package
  (unless (package-installed-p 'use-package)
    (package-install 'use-package))
  (require 'use-package)
  (setq use-package-always-ensure t)
#+end_src

* Core Packages
Essential packages for basic functionality
#+begin_src emacs-lisp
  (use-package evil)
  (use-package evil-collection)
  (use-package general)
#+end_src

* Development Tools
Packages for coding and project management
#+begin_src emacs-lisp
  (use-package projectile)
  (use-package eglot)
  (use-package yasnippet-snippets)
  (use-package eat)
#+end_src

* Org Mode Ecosystem
#+begin_src emacs-lisp
  (use-package org)
  (use-package toc-org)
  (use-package org-superstar)
  (use-package org-tempo :ensure nil :after org)
#+end_src

* UI Enhancements
Packages for better visuals and icons
#+begin_src emacs-lisp
    (use-package nerd-icons)
    (use-package nerd-icons-dired)
    (use-package nerd-icons-ibuffer)
    (use-package magit)
    (use-package diff-hl)
    (use-package doom-modeline)
    (use-package catppuccin-theme)
    (use-package dashboard)
    (use-package all-the-icons :ensure t)
#+end_src

* Completion Framework
#+begin_src emacs-lisp
  (use-package corfu)
  (use-package nerd-icons-corfu)
  (use-package cape)
  (use-package orderless)
  (use-package vertico)
  (use-package marginalia)
  (use-package nerd-icons-completion)
  (use-package consult)
#+end_src

* Quality of Life
#+begin_src emacs-lisp
  (use-package diminish)
  (use-package rainbow-delimiters)
  (use-package which-key)
#+end_src

* Finalization
#+begin_src emacs-lisp
  (provide 'packages)
#+end_src
